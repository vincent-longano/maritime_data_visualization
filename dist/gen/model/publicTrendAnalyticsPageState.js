"use strict";
/**
 * xyzt.ai platform API
 * <p>Welcome to the documentation of the public API of the xyzt.ai platform. The goal of this API is to allow you to automate certain operations on the platform.</p><p>The base URL of the server is <a href=\"https://api.platform-xyzt.ai\">https://api.platform-xyzt.ai</a>. All URLs in this documentation are relative to this base URL.</p><p>You can also find some example scripts on <a href=\"https://github.com/xyzt-ai/platform-examples\">Github</a>.</p>
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@xyzt.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PublicTrendAnalyticsPageState = void 0;
/**
* The state of the trend analytics page
*/
class PublicTrendAnalyticsPageState {
    static getAttributeTypeMap() {
        return PublicTrendAnalyticsPageState.attributeTypeMap;
    }
}
exports.PublicTrendAnalyticsPageState = PublicTrendAnalyticsPageState;
PublicTrendAnalyticsPageState.discriminator = undefined;
PublicTrendAnalyticsPageState.attributeTypeMap = [
    {
        "name": "activeDataSetId",
        "baseName": "activeDataSetId",
        "type": "string"
    },
    {
        "name": "mode",
        "baseName": "mode",
        "type": "PublicTrendAnalyticsPageState.ModeEnum"
    },
    {
        "name": "chartType",
        "baseName": "chartType",
        "type": "PublicTrendAnalyticsPageState.ChartTypeEnum"
    },
    {
        "name": "displayPropertyOptions",
        "baseName": "displayPropertyOptions",
        "type": "PublicTrendAnalyticsDisplayPropertyOptions"
    },
    {
        "name": "filter",
        "baseName": "filter",
        "type": "PublicAnalyticsFilterDTO"
    },
    {
        "name": "globalTimeZoneIdentifier",
        "baseName": "globalTimeZoneIdentifier",
        "type": "string"
    },
    {
        "name": "localAreas",
        "baseName": "localAreas",
        "type": "Array<PublicCommonAnalyticsLocalAreaPropertiesDTO>"
    },
    {
        "name": "timeRanges",
        "baseName": "timeRanges",
        "type": "Array<PublicTemporalRangeFilterDTO>"
    },
    {
        "name": "groupingMode",
        "baseName": "groupingMode",
        "type": "PublicTrendAnalyticsPageState.GroupingModeEnum"
    }
];
(function (PublicTrendAnalyticsPageState) {
    let ModeEnum;
    (function (ModeEnum) {
        ModeEnum[ModeEnum["Property"] = 'DISPLAY_PROPERTY'] = "Property";
        ModeEnum[ModeEnum["NumberOfAssets"] = 'DISPLAY_NUMBER_OF_ASSETS'] = "NumberOfAssets";
    })(ModeEnum = PublicTrendAnalyticsPageState.ModeEnum || (PublicTrendAnalyticsPageState.ModeEnum = {}));
    let ChartTypeEnum;
    (function (ChartTypeEnum) {
        ChartTypeEnum[ChartTypeEnum["BarChart"] = 'BAR_CHART'] = "BarChart";
        ChartTypeEnum[ChartTypeEnum["LineChart"] = 'LINE_CHART'] = "LineChart";
    })(ChartTypeEnum = PublicTrendAnalyticsPageState.ChartTypeEnum || (PublicTrendAnalyticsPageState.ChartTypeEnum = {}));
    let GroupingModeEnum;
    (function (GroupingModeEnum) {
        GroupingModeEnum[GroupingModeEnum["GroupByHour"] = 'GROUP_BY_HOUR'] = "GroupByHour";
        GroupingModeEnum[GroupingModeEnum["GroupByDay"] = 'GROUP_BY_DAY'] = "GroupByDay";
        GroupingModeEnum[GroupingModeEnum["NoGrouping"] = 'NO_GROUPING'] = "NoGrouping";
    })(GroupingModeEnum = PublicTrendAnalyticsPageState.GroupingModeEnum || (PublicTrendAnalyticsPageState.GroupingModeEnum = {}));
})(PublicTrendAnalyticsPageState = exports.PublicTrendAnalyticsPageState || (exports.PublicTrendAnalyticsPageState = {}));
