"use strict";
/**
 * xyzt.ai platform API
 * <p>Welcome to the documentation of the public API of the xyzt.ai platform. The goal of this API is to allow you to automate certain operations on the platform.</p><p>The base URL of the server is <a href=\"https://api.platform-xyzt.ai\">https://api.platform-xyzt.ai</a>. All URLs in this documentation are relative to this base URL.</p><p>You can also find some example scripts on <a href=\"https://github.com/xyzt-ai/platform-examples\">Github</a>.</p>
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@xyzt.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PublicVisualAnalyticsNamedHeatmapDTO = void 0;
/**
* <p>Use a heatmap as color map for a numerical property.</p><p>For numerical properties, the color map specifies the mapping from a numeric value to a color. You can only specify a single color map for a numerical property. If you specify multiple ones, it is undefined which of the specified color maps will be used.</p>
*/
class PublicVisualAnalyticsNamedHeatmapDTO {
    static getAttributeTypeMap() {
        return PublicVisualAnalyticsNamedHeatmapDTO.attributeTypeMap;
    }
}
exports.PublicVisualAnalyticsNamedHeatmapDTO = PublicVisualAnalyticsNamedHeatmapDTO;
PublicVisualAnalyticsNamedHeatmapDTO.discriminator = undefined;
PublicVisualAnalyticsNamedHeatmapDTO.attributeTypeMap = [
    {
        "name": "name",
        "baseName": "name",
        "type": "PublicVisualAnalyticsNamedHeatmapDTO.NameEnum"
    },
    {
        "name": "fromValue",
        "baseName": "fromValue",
        "type": "number"
    },
    {
        "name": "toValue",
        "baseName": "toValue",
        "type": "number"
    },
    {
        "name": "lowerValuesHexColor",
        "baseName": "lowerValuesHexColor",
        "type": "string"
    },
    {
        "name": "upperValuesHexColor",
        "baseName": "upperValuesHexColor",
        "type": "string"
    },
    {
        "name": "noDataHexColor",
        "baseName": "noDataHexColor",
        "type": "string"
    }
];
(function (PublicVisualAnalyticsNamedHeatmapDTO) {
    let NameEnum;
    (function (NameEnum) {
        NameEnum[NameEnum["Bone"] = 'BONE'] = "Bone";
        NameEnum[NameEnum["Cool"] = 'COOL'] = "Cool";
        NameEnum[NameEnum["Hot"] = 'HOT'] = "Hot";
        NameEnum[NameEnum["Jet"] = 'JET'] = "Jet";
        NameEnum[NameEnum["Jet2"] = 'JET2'] = "Jet2";
        NameEnum[NameEnum["Plasma"] = 'PLASMA'] = "Plasma";
        NameEnum[NameEnum["Rainbow"] = 'RAINBOW'] = "Rainbow";
        NameEnum[NameEnum["Rainbow2"] = 'RAINBOW2'] = "Rainbow2";
        NameEnum[NameEnum["Spring"] = 'SPRING'] = "Spring";
        NameEnum[NameEnum["Viridis"] = 'VIRIDIS'] = "Viridis";
    })(NameEnum = PublicVisualAnalyticsNamedHeatmapDTO.NameEnum || (PublicVisualAnalyticsNamedHeatmapDTO.NameEnum = {}));
})(PublicVisualAnalyticsNamedHeatmapDTO = exports.PublicVisualAnalyticsNamedHeatmapDTO || (exports.PublicVisualAnalyticsNamedHeatmapDTO = {}));
