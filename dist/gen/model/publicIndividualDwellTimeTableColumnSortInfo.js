"use strict";
/**
 * xyzt.ai platform API
 * <p>Welcome to the documentation of the public API of the xyzt.ai platform. The goal of this API is to allow you to automate certain operations on the platform.</p><p>The base URL of the server is <a href=\"https://api.platform-xyzt.ai\">https://api.platform-xyzt.ai</a>. All URLs in this documentation are relative to this base URL.</p><p>You can also find some example scripts on <a href=\"https://github.com/xyzt-ai/platform-examples\">Github</a>.</p>
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@xyzt.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PublicIndividualDwellTimeTableColumnSortInfo = void 0;
/**
* <p>Defines how the rows in the table must be sorted.</p><ul><li>When the collection is empty, a default order will be used.</li><li>When the collection contains a single item, the rows will be sorted based on their value for that column.</li><li>When the collection contains multiple items, the rows will first be sorted based on their value for the first specified column. If some rows have the same value for that first column, they will be sorted further on the value of the second specified column, ... .</li></ul><p>You can only sort on columns that are included in the table.</p><p>Note that, similar to the UI, this ordering only applies to the rows that are available to the table.For example when the data is sorted ascending on the \'speed\' column, the first row in the table will have the lowest speed. It is however possible that there are assets in the data set with an even lower speed, but those assets were not included in the table.</p>
*/
class PublicIndividualDwellTimeTableColumnSortInfo {
    static getAttributeTypeMap() {
        return PublicIndividualDwellTimeTableColumnSortInfo.attributeTypeMap;
    }
}
exports.PublicIndividualDwellTimeTableColumnSortInfo = PublicIndividualDwellTimeTableColumnSortInfo;
PublicIndividualDwellTimeTableColumnSortInfo.discriminator = undefined;
PublicIndividualDwellTimeTableColumnSortInfo.attributeTypeMap = [
    {
        "name": "columnId",
        "baseName": "columnId",
        "type": "PublicIndividualDwellTimeTableColumnSortInfo.ColumnIdEnum"
    },
    {
        "name": "sortOrder",
        "baseName": "sortOrder",
        "type": "PublicIndividualDwellTimeTableColumnSortInfo.SortOrderEnum"
    }
];
(function (PublicIndividualDwellTimeTableColumnSortInfo) {
    let ColumnIdEnum;
    (function (ColumnIdEnum) {
        ColumnIdEnum[ColumnIdEnum["AreaName"] = 'AREA_NAME'] = "AreaName";
        ColumnIdEnum[ColumnIdEnum["AssetId"] = 'ASSET_ID'] = "AssetId";
        ColumnIdEnum[ColumnIdEnum["EnterCount"] = 'ENTER_COUNT'] = "EnterCount";
        ColumnIdEnum[ColumnIdEnum["FirstTimeInside"] = 'FIRST_TIME_INSIDE'] = "FirstTimeInside";
        ColumnIdEnum[ColumnIdEnum["LastTimeInside"] = 'LAST_TIME_INSIDE'] = "LastTimeInside";
        ColumnIdEnum[ColumnIdEnum["DwellTime"] = 'DWELL_TIME'] = "DwellTime";
        ColumnIdEnum[ColumnIdEnum["CumulativeDwellTime"] = 'CUMULATIVE_DWELL_TIME'] = "CumulativeDwellTime";
    })(ColumnIdEnum = PublicIndividualDwellTimeTableColumnSortInfo.ColumnIdEnum || (PublicIndividualDwellTimeTableColumnSortInfo.ColumnIdEnum = {}));
    let SortOrderEnum;
    (function (SortOrderEnum) {
        SortOrderEnum[SortOrderEnum["Ascending"] = 'ASCENDING'] = "Ascending";
        SortOrderEnum[SortOrderEnum["Descending"] = 'DESCENDING'] = "Descending";
    })(SortOrderEnum = PublicIndividualDwellTimeTableColumnSortInfo.SortOrderEnum || (PublicIndividualDwellTimeTableColumnSortInfo.SortOrderEnum = {}));
})(PublicIndividualDwellTimeTableColumnSortInfo = exports.PublicIndividualDwellTimeTableColumnSortInfo || (exports.PublicIndividualDwellTimeTableColumnSortInfo = {}));
