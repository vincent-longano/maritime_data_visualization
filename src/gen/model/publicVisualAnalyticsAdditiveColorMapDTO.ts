/**
 * xyzt.ai platform API
 * <p>Welcome to the documentation of the public API of the xyzt.ai platform. The goal of this API is to allow you to automate certain operations on the platform.</p><p>The base URL of the server is <a href=\"https://api.platform-xyzt.ai\">https://api.platform-xyzt.ai</a>. All URLs in this documentation are relative to this base URL.</p><p>You can also find some example scripts on <a href=\"https://github.com/xyzt-ai/platform-examples\">Github</a>.</p>
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@xyzt.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* <p>Use an additive color map as color map for a numerical property.</p><p>An additive color map is created by selecting a (dark) color as start color, and that color is added up repeatedly to define the color map.</p><p>For numerical properties, the color map specifies the mapping from a numeric value to a color.</p>
*/
export class PublicVisualAnalyticsAdditiveColorMapDTO {
    /**
    * The start color for the additive color map as hex string.
    */
    'startColor': string;
    /**
    * <p>Defines the minimum or start value from where this color map is used to determine the color.</p><p>The color mapping will be applied on all the values from <code>fromValue</code> to <code>toValue</code>.</p><p>The colors used for values outside this range are defined in <code>lowerValuesHexColor</code> and <code>upperValuesHexColor</code>.</p>
    */
    'fromValue'?: number;
    /**
    * <p>Defines the maximum or end value from where this color map is used to determine the color.</p><p>The color mapping will be applied on all the values from <code>fromValue</code> to <code>toValue</code>.</p><p>The colors used for values outside this range are defined in <code>lowerValuesHexColor</code> and <code>upperValuesHexColor</code>.</p>
    */
    'toValue'?: number;
    /**
    * <p>Defines the color to use for values smaller than <code>fromValue</code>.</p>
    */
    'lowerValuesHexColor'?: string;
    /**
    * <p>Defines the color to use for values greater than <code>toValue</code>.</p>
    */
    'upperValuesHexColor'?: string;
    /**
    * <p>When specified, this color will be used for the No Data values.</p><p>Otherwise, a random color will be used for those values.</p>
    */
    'noDataHexColor'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "startColor",
            "baseName": "startColor",
            "type": "string"
        },
        {
            "name": "fromValue",
            "baseName": "fromValue",
            "type": "number"
        },
        {
            "name": "toValue",
            "baseName": "toValue",
            "type": "number"
        },
        {
            "name": "lowerValuesHexColor",
            "baseName": "lowerValuesHexColor",
            "type": "string"
        },
        {
            "name": "upperValuesHexColor",
            "baseName": "upperValuesHexColor",
            "type": "string"
        },
        {
            "name": "noDataHexColor",
            "baseName": "noDataHexColor",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return PublicVisualAnalyticsAdditiveColorMapDTO.attributeTypeMap;
    }
}

