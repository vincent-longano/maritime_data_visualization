/**
 * xyzt.ai platform API
 * <p>Welcome to the documentation of the public API of the xyzt.ai platform. The goal of this API is to allow you to automate certain operations on the platform.</p><p>The base URL of the server is <a href=\"https://api.platform-xyzt.ai\">https://api.platform-xyzt.ai</a>. All URLs in this documentation are relative to this base URL.</p><p>You can also find some example scripts on <a href=\"https://github.com/xyzt-ai/platform-examples\">Github</a>.</p>
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@xyzt.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PublicDataSetSpatialBoundsDTO } from './publicDataSetSpatialBoundsDTO';

export class PublicDataSetDTO {
    /**
    * The unique identifier of the data set
    */
    'id': string;
    /**
    * The human readable name of the data set
    */
    'name': string;
    /**
    * The description of the data set
    */
    'description': string;
    /**
    * The list of batches that are currently present in this data set
    */
    'batches': Array<string>;
    /**
    * The minimum time of the time range of the dataset, expressed as seconds since the epoch
    */
    'minimumTime': number;
    /**
    * The maximum time of the time range of the dataset, expressed as seconds since the epoch
    */
    'maximumTime': number;
    'spatialBounds': PublicDataSetSpatialBoundsDTO;
    /**
    * The supported visualization modes for the dataset
    */
    'visualizationModes': Array<PublicDataSetDTO.VisualizationModesEnum>;
    /**
    * Indicates whether you are the owner of this resource. When the resource is not owned by you, some operations on it will not work.
    */
    'owned': boolean;
    /**
    * <p>The state of the data set</p><ul><li><code>IDLE</code>: all available data for this data set has been processed.</li><li><code>PROCESSING</code>: data is currently being processed.</li><li><code>QUEUED</code>: there is data uploaded for this data set that is waiting to be processed, but the processing job isn\'t running yet.</li></ul>
    */
    'state': PublicDataSetDTO.StateEnum;
    /**
    * The type of the dataset
    */
    'type': PublicDataSetDTO.TypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "batches",
            "baseName": "batches",
            "type": "Array<string>"
        },
        {
            "name": "minimumTime",
            "baseName": "minimumTime",
            "type": "number"
        },
        {
            "name": "maximumTime",
            "baseName": "maximumTime",
            "type": "number"
        },
        {
            "name": "spatialBounds",
            "baseName": "spatialBounds",
            "type": "PublicDataSetSpatialBoundsDTO"
        },
        {
            "name": "visualizationModes",
            "baseName": "visualizationModes",
            "type": "Array<PublicDataSetDTO.VisualizationModesEnum>"
        },
        {
            "name": "owned",
            "baseName": "owned",
            "type": "boolean"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "PublicDataSetDTO.StateEnum"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "PublicDataSetDTO.TypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return PublicDataSetDTO.attributeTypeMap;
    }
}

export namespace PublicDataSetDTO {
    export enum VisualizationModesEnum {
        Gridded = <any> 'GRIDDED',
        Trajectories = <any> 'TRAJECTORIES',
        Realtime = <any> 'REALTIME'
    }
    export enum StateEnum {
        Idle = <any> 'IDLE',
        Processing = <any> 'PROCESSING',
        Queued = <any> 'QUEUED'
    }
    export enum TypeEnum {
        MovementData = <any> 'MOVEMENT_DATA',
        TimeSeriesData = <any> 'TIME_SERIES_DATA',
        StaticGeojson = <any> 'STATIC_GEOJSON'
    }
}
